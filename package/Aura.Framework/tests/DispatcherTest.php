<?php
namespace Aura\Framework;
use Aura\Di\Config;
use Aura\Di\Forge;
use Aura\Router\Map as RouterMap;
use Aura\Router\RouteFactory;
use Aura\Web\ControllerFactory;

/**
 * Test class for Dispatcher.
 * Generated by PHPUnit on 2011-10-06 at 15:17:11.
 */
class DispatcherTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Dispatcher
     */
    protected $dispatcher;
    
    protected $router;
    
    protected $controller_factory;
    
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        
        $this->router = new RouterMap(new RouteFactory);
        $this->router->add(null, '/mock', array(
            'values' => array(
                'controller' => 'mock',
            ),
        ));
        
        $map = array(
            'mock' => 'Aura\Framework\MockPageController',
        );
        
        $not_found = 'Aura\Framework\MockMissingController';
        
        $this->controller_factory = new ControllerFactory(
            new Forge(new Config),
            $map,
            $not_found
        );
        
        $this->dispatcher = new Dispatcher($this->router, $this->controller_factory);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    /**
     * @todo Implement testExec().
     */
    public function testExec()
    {
        $actual = $this->dispatcher->exec('/mock');
        $expect = "Aura\Framework\MockPageController::exec";
        $this->assertSame($expect, $actual);
    }

    public function testExec_notFound()
    {
        $actual = $this->dispatcher->exec('/missing-controller');
        $expect = "Aura\Framework\MockMissingController::exec";
        $this->assertSame($expect, $actual);
    }
}
